<?php
/**
 * GetAddressResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  NeblioAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Neblio REST API Suite
 *
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.2.4
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace NeblioAPI\Model;

use \ArrayAccess;
use \NeblioAPI\ObjectSerializer;

/**
 * GetAddressResponse Class Doc Comment
 *
 * @category Class
 * @package  NeblioAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GetAddressResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'getAddressResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'addr_str' => 'string',
        'balance' => 'float',
        'balance_sat' => 'float',
        'total_received' => 'float',
        'total_received_sat' => 'float',
        'total_sent' => 'float',
        'total_sent_sat' => 'float',
        'unconfirmed_balance' => 'float',
        'unconfirmed_balance_sat' => 'float',
        'unconfirmed_tx_appearances' => 'float',
        'tx_appearances' => 'float',
        'transactions' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'addr_str' => null,
        'balance' => null,
        'balance_sat' => null,
        'total_received' => null,
        'total_received_sat' => null,
        'total_sent' => null,
        'total_sent_sat' => null,
        'unconfirmed_balance' => null,
        'unconfirmed_balance_sat' => null,
        'unconfirmed_tx_appearances' => null,
        'tx_appearances' => null,
        'transactions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'addr_str' => 'addrStr',
        'balance' => 'balance',
        'balance_sat' => 'balanceSat',
        'total_received' => 'totalReceived',
        'total_received_sat' => 'totalReceivedSat',
        'total_sent' => 'totalSent',
        'total_sent_sat' => 'totalSentSat',
        'unconfirmed_balance' => 'unconfirmedBalance',
        'unconfirmed_balance_sat' => 'unconfirmedBalanceSat',
        'unconfirmed_tx_appearances' => 'unconfirmedTxAppearances',
        'tx_appearances' => 'txAppearances',
        'transactions' => 'transactions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'addr_str' => 'setAddrStr',
        'balance' => 'setBalance',
        'balance_sat' => 'setBalanceSat',
        'total_received' => 'setTotalReceived',
        'total_received_sat' => 'setTotalReceivedSat',
        'total_sent' => 'setTotalSent',
        'total_sent_sat' => 'setTotalSentSat',
        'unconfirmed_balance' => 'setUnconfirmedBalance',
        'unconfirmed_balance_sat' => 'setUnconfirmedBalanceSat',
        'unconfirmed_tx_appearances' => 'setUnconfirmedTxAppearances',
        'tx_appearances' => 'setTxAppearances',
        'transactions' => 'setTransactions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'addr_str' => 'getAddrStr',
        'balance' => 'getBalance',
        'balance_sat' => 'getBalanceSat',
        'total_received' => 'getTotalReceived',
        'total_received_sat' => 'getTotalReceivedSat',
        'total_sent' => 'getTotalSent',
        'total_sent_sat' => 'getTotalSentSat',
        'unconfirmed_balance' => 'getUnconfirmedBalance',
        'unconfirmed_balance_sat' => 'getUnconfirmedBalanceSat',
        'unconfirmed_tx_appearances' => 'getUnconfirmedTxAppearances',
        'tx_appearances' => 'getTxAppearances',
        'transactions' => 'getTransactions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['addr_str'] = isset($data['addr_str']) ? $data['addr_str'] : null;
        $this->container['balance'] = isset($data['balance']) ? $data['balance'] : null;
        $this->container['balance_sat'] = isset($data['balance_sat']) ? $data['balance_sat'] : null;
        $this->container['total_received'] = isset($data['total_received']) ? $data['total_received'] : null;
        $this->container['total_received_sat'] = isset($data['total_received_sat']) ? $data['total_received_sat'] : null;
        $this->container['total_sent'] = isset($data['total_sent']) ? $data['total_sent'] : null;
        $this->container['total_sent_sat'] = isset($data['total_sent_sat']) ? $data['total_sent_sat'] : null;
        $this->container['unconfirmed_balance'] = isset($data['unconfirmed_balance']) ? $data['unconfirmed_balance'] : null;
        $this->container['unconfirmed_balance_sat'] = isset($data['unconfirmed_balance_sat']) ? $data['unconfirmed_balance_sat'] : null;
        $this->container['unconfirmed_tx_appearances'] = isset($data['unconfirmed_tx_appearances']) ? $data['unconfirmed_tx_appearances'] : null;
        $this->container['tx_appearances'] = isset($data['tx_appearances']) ? $data['tx_appearances'] : null;
        $this->container['transactions'] = isset($data['transactions']) ? $data['transactions'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets addr_str
     *
     * @return string|null
     */
    public function getAddrStr()
    {
        return $this->container['addr_str'];
    }

    /**
     * Sets addr_str
     *
     * @param string|null $addr_str Address in string form
     *
     * @return $this
     */
    public function setAddrStr($addr_str)
    {
        $this->container['addr_str'] = $addr_str;

        return $this;
    }

    /**
     * Gets balance
     *
     * @return float|null
     */
    public function getBalance()
    {
        return $this->container['balance'];
    }

    /**
     * Sets balance
     *
     * @param float|null $balance NEBL balance
     *
     * @return $this
     */
    public function setBalance($balance)
    {
        $this->container['balance'] = $balance;

        return $this;
    }

    /**
     * Gets balance_sat
     *
     * @return float|null
     */
    public function getBalanceSat()
    {
        return $this->container['balance_sat'];
    }

    /**
     * Sets balance_sat
     *
     * @param float|null $balance_sat NEBL balance in satoshis
     *
     * @return $this
     */
    public function setBalanceSat($balance_sat)
    {
        $this->container['balance_sat'] = $balance_sat;

        return $this;
    }

    /**
     * Gets total_received
     *
     * @return float|null
     */
    public function getTotalReceived()
    {
        return $this->container['total_received'];
    }

    /**
     * Sets total_received
     *
     * @param float|null $total_received Total NEBL received
     *
     * @return $this
     */
    public function setTotalReceived($total_received)
    {
        $this->container['total_received'] = $total_received;

        return $this;
    }

    /**
     * Gets total_received_sat
     *
     * @return float|null
     */
    public function getTotalReceivedSat()
    {
        return $this->container['total_received_sat'];
    }

    /**
     * Sets total_received_sat
     *
     * @param float|null $total_received_sat Total NEBL received in satoshis
     *
     * @return $this
     */
    public function setTotalReceivedSat($total_received_sat)
    {
        $this->container['total_received_sat'] = $total_received_sat;

        return $this;
    }

    /**
     * Gets total_sent
     *
     * @return float|null
     */
    public function getTotalSent()
    {
        return $this->container['total_sent'];
    }

    /**
     * Sets total_sent
     *
     * @param float|null $total_sent Total NEBL sent
     *
     * @return $this
     */
    public function setTotalSent($total_sent)
    {
        $this->container['total_sent'] = $total_sent;

        return $this;
    }

    /**
     * Gets total_sent_sat
     *
     * @return float|null
     */
    public function getTotalSentSat()
    {
        return $this->container['total_sent_sat'];
    }

    /**
     * Sets total_sent_sat
     *
     * @param float|null $total_sent_sat Total NEBL sent satoshis
     *
     * @return $this
     */
    public function setTotalSentSat($total_sent_sat)
    {
        $this->container['total_sent_sat'] = $total_sent_sat;

        return $this;
    }

    /**
     * Gets unconfirmed_balance
     *
     * @return float|null
     */
    public function getUnconfirmedBalance()
    {
        return $this->container['unconfirmed_balance'];
    }

    /**
     * Sets unconfirmed_balance
     *
     * @param float|null $unconfirmed_balance Unconfirmed NEBL balance
     *
     * @return $this
     */
    public function setUnconfirmedBalance($unconfirmed_balance)
    {
        $this->container['unconfirmed_balance'] = $unconfirmed_balance;

        return $this;
    }

    /**
     * Gets unconfirmed_balance_sat
     *
     * @return float|null
     */
    public function getUnconfirmedBalanceSat()
    {
        return $this->container['unconfirmed_balance_sat'];
    }

    /**
     * Sets unconfirmed_balance_sat
     *
     * @param float|null $unconfirmed_balance_sat Unconfirmed NEBL balance in satoshis
     *
     * @return $this
     */
    public function setUnconfirmedBalanceSat($unconfirmed_balance_sat)
    {
        $this->container['unconfirmed_balance_sat'] = $unconfirmed_balance_sat;

        return $this;
    }

    /**
     * Gets unconfirmed_tx_appearances
     *
     * @return float|null
     */
    public function getUnconfirmedTxAppearances()
    {
        return $this->container['unconfirmed_tx_appearances'];
    }

    /**
     * Sets unconfirmed_tx_appearances
     *
     * @param float|null $unconfirmed_tx_appearances Number of unconfirmed transactions for this address
     *
     * @return $this
     */
    public function setUnconfirmedTxAppearances($unconfirmed_tx_appearances)
    {
        $this->container['unconfirmed_tx_appearances'] = $unconfirmed_tx_appearances;

        return $this;
    }

    /**
     * Gets tx_appearances
     *
     * @return float|null
     */
    public function getTxAppearances()
    {
        return $this->container['tx_appearances'];
    }

    /**
     * Sets tx_appearances
     *
     * @param float|null $tx_appearances Number of transactions for this address
     *
     * @return $this
     */
    public function setTxAppearances($tx_appearances)
    {
        $this->container['tx_appearances'] = $tx_appearances;

        return $this;
    }

    /**
     * Gets transactions
     *
     * @return string[]|null
     */
    public function getTransactions()
    {
        return $this->container['transactions'];
    }

    /**
     * Sets transactions
     *
     * @param string[]|null $transactions Array of transaction ids for this address
     *
     * @return $this
     */
    public function setTransactions($transactions)
    {
        $this->container['transactions'] = $transactions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


